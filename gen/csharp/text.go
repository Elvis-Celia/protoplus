package csharp

// 报错行号+7
const TemplateText = `// Generated by github.com/davyxu/protoplus
// DO NOT EDIT!
using System;
using System.Collections.Generic;
using ProtoPlus;

namespace Proto
{
	{{range $a, $enumobj := .Enums}}
	public enum {{.Name}} 
	{
		{{range .Fields}}
		{{.Name}} = {{TagNumber $enumobj .}}, {{end}}
	} {{end}}

	{{range $a, $obj := .Structs}}
	{{ObjectLeadingComment .}}
	public partial class {{$obj.Name}} : IProtoStruct 
	{
		{{range .Fields}}public {{CSTypeNameFull .}} {{.Name}};
		{{end}}

		public void Marshal(OutputStream stream)
		{ {{range .Fields}} {{if IsEnum .}}
			stream.WriteEnum({{TagNumber $obj .}}, {{.Name}} ); {{else if IsEnumSlice .}}
			stream.WriteEnum({{TagNumber $obj .}}, {{.Name}} ); {{else}}
			stream.Write{{CodecName .}}({{TagNumber $obj .}}, {{.Name}} ); {{end}}
		  {{end}}
		}

		public int GetSize()
		{
			int size = 0; {{range .Fields}} {{if IsEnum .}}
			size += OutputStream.SizeEnum({{TagNumber $obj .}}, {{.Name}}); {{else if IsEnumSlice .}}
			size += OutputStream.SizeEnum({{TagNumber $obj .}}, {{.Name}}); {{else}}
			size += OutputStream.Size{{CodecName .}}({{TagNumber $obj .}}, {{.Name}}); {{end}}
			{{end}}
			return size;
		}


 		public bool Unmarshal(InputStream stream, int fieldNumber, WireFormat.WireType wt)
		{
		 	switch (fieldNumber)
            { {{range .Fields}}
			case {{TagNumber $obj .}}:	{{if IsEnum .}}
				stream.ReadEnum(wt, ref {{.Name}}); {{else if IsEnumSlice .}}
				stream.ReadEnum(wt, ref {{.Name}}); {{else }}
				stream.Read{{CodecName .}}(wt, ref {{.Name}}); 	{{end}}
                break;
			{{end}}
			default:
				return true;
            }

            return false;
		}
	}

{{end}}
}
`
